include "stdio.h"
include "stdlib.h"
include "unistd.h"
include "three/c11/threads.h"

import Event

def main(Int argc, **Char argv; Int)
  *Core::Event::Monitor monitor = Core::Event::monitor_create()

  monitor.set_event_handler(do (Natural handle, Natural data) {
      *Char buffer = malloc(data + 1)
      ssize_t bytes_read = read(handle, buffer, data)

      buffer[bytes_read] = 0 // null-terminate the string

      printf("read: %s\n", buffer)

      free(buffer)
  })

  monitor.watch(Core::Event::Type::Read, fileno(__stdinp))

  timespec ts

  ts.tv_sec = 5
  ts.tv_nsec = 0

  thrd_sleep(&ts, null)

  *Int x = null
  *x = 42

  return 0
end
